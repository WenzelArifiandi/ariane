---
import '../styles/global.css'
import '../styles/gloss.css'
import Analytics from '@vercel/analytics/astro'

interface Props {
  title?: string
  description?: string
  ogImage?: string
  pathname?: string
}

const { title, description, ogImage, pathname } = Astro.props as Props

// Site defaults
const siteTitle = 'Wenzel Arifiandi'
const siteDescription = 'A personal website by Wenzel Arifiandi'
const siteUrl = 'https://wenzelarifiandi.com'
const siteImage = '/og.png'

// Computed per-page values
const pageTitle = title ? `${title} â€” ${siteTitle}` : siteTitle
const pageDescription = description ?? siteDescription
const pageImage = ogImage ? new URL(ogImage, siteUrl).toString() : new URL(siteImage, siteUrl).toString()
const pageUrl = pathname ? new URL(pathname, siteUrl).toString() : siteUrl
---

<!DOCTYPE html>
<html lang="en" class="antialiased" data-theme="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:image" content={pageImage} />
    <meta property="og:url" content={pageUrl} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDescription} />
    <meta name="twitter:image" content={pageImage} />

    <link rel="canonical" href={pageUrl} />
    <link rel="icon" href="/favicon.svg" />
    <!-- Material Symbols for M3 icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,500,0,0" />
    <script type="module" src="/src/scripts/maker-client.ts"></script>

    <!-- Base styles -->
    <style>
      :root { --pad-x: clamp(1.25rem, 5vw, 2.25rem); --align-shift: 36px; }
      *,*::before,*::after{ box-sizing: border-box; }
      html { scroll-behavior: smooth; }
      body { background: var(--page); color: var(--ink); min-width: 360px; }

      .card {
        border-radius: var(--radius);
        box-shadow: var(--shadow);
      }
      .accent { color: var(--wisteria); }

      .btn {
        display:inline-flex; align-items:center; gap:.5rem;
        padding:.7rem 1rem; border-radius:999px;
        background: var(--md-sys-color-primary, #7150D9);
        color: var(--md-sys-color-on-primary, #fff);
        font-weight:650; text-decoration:none;
        transition: transform var(--md-sys-motion-duration-short, .14s) var(--md-sys-motion-ease-standard, cubic-bezier(.2,0,0,1)),
                    box-shadow var(--md-sys-motion-duration-short, .14s) var(--md-sys-motion-ease-standard, cubic-bezier(.2,0,0,1));
        box-shadow: var(--md-sys-elevation-1, 0 6px 20px rgba(0,0,0,.06));
        -webkit-appearance: none; appearance: none; border: 0;
      }
      .btn::after { content: none; }
      .btn:hover { transform: translateY(-1px); box-shadow: var(--md-sys-elevation-2, 0 12px 28px rgba(0,0,0,.08)); }

      .chip { display:inline-block; padding:.25rem .6rem; border-radius:999px; font-weight:600; }

      /* Shared container */
      .wrap, .page-wrap { max-width: 1100px; margin-left: auto; margin-right: auto; padding-left: var(--pad-x); padding-right: var(--pad-x); }
      /* One true container for alignment */
      .container { max-width: 1100px; margin-inline: auto; padding-inline: var(--pad-x); }
      .container-xl { max-width: 1200px; margin-inline: auto; padding-inline: var(--pad-x); }
      .stack { display: grid; gap: 1rem; }
      /* Align nav + sections to hero title at your screen */
      .align-hero { padding-left: calc(var(--pad-x) + 18px); }
      a.btn, a.btn:hover, a.btn:visited, a.btn:active { text-decoration: none !important; }
    </style>
  <Analytics />
  </head>
  <body>
    <slot />
  </body>
</html>
