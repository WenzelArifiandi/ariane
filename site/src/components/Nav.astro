---
const studioHref = import.meta.env.DEV ? 'http://localhost:3333/' : 'https://studio.wenzelarifiandi.com';
const cfTeamDomain = import.meta.env.PUBLIC_CF_TEAM_DOMAIN ?? 'wenzelarifiandi.cloudflareaccess.com';
---

<nav class="sticky top-3 z-50 my-3 relative" data-team-domain={cfTeamDomain}>
  <div class="max-w-container mx-auto px-pad-x">
    <div class="glass flex flex-wrap items-center gap-2 xs:gap-3 md:gap-nav-md py-3 px-glass-x relative overflow-visible">

      <!-- Brand -->
      <div class="flex-1 min-w-[180px] xs:min-w-0">
        <a href="/"
           class="brand relative z-10 block font-semibold text-[18px] sm:text-[20px] leading-[22px] sm:leading-[23px]">
          Wenzel Arifiandi
        </a>
      </div>

      <!-- Right: Explore drawer toggle + Maker button -->
      <div class="flex items-center gap-2 xs:gap-3 justify-start xs:justify-end basis-full xs:basis-auto xs:ml-auto relative z-10">
        <!-- Explore button (available on all breakpoints) -->
        <button
          id="explore-toggle"
          class="chip-m3 inline-flex items-center gap-1.5 px-3 py-1.5
                 text-[16px] sm:text-[18px] leading-[20px] sm:leading-[21px] font-medium
                 transition-[transform,box-shadow] duration-200 ease-[cubic-bezier(0.2,0,0,1)]
                 active:scale-[0.98] active:shadow-sm"
          aria-controls="mobile-menu"
          aria-expanded="false"
          aria-haspopup="true"
          type="button"
        >
          <!-- M3 compass icon -->
          <span class="material-symbols-rounded text-white" style="font-size: 16px;">explore</span>
          <span>Explore</span>
        </button>

        <!-- Maker button (always visible at all screen sizes) -->
        <button id="creator-toggle"
                class="chip-m3 inline-flex items-center gap-2 px-3 py-1.5 font-medium text-[16px] sm:text-[18px]
                       leading-[20px] sm:leading-[21px] whitespace-nowrap"
                aria-haspopup="true" aria-expanded="false" aria-controls="creator-sheet" title="Maker">
          <!-- M3 sparkle icon -->
          <span class="material-symbols-rounded text-white" style="font-size: 18px;">auto_awesome</span>
          <span class="label hidden sm:inline whitespace-nowrap">Maker</span>
        </button>
      </div>

    </div>
  </div>
  <!-- Mobile drop panel -->
  <div id="mobile-menu"
       class="absolute inset-x-0 top-full mt-2"
       hidden>
    <div class="max-w-container mx-auto px-pad-x">
      <div
        class="glass transform-gpu px-glass-x py-3
               origin-top will-change-transform will-change-opacity
               transition-[opacity,transform] duration-[420ms]
               ease-[cubic-bezier(0.2,1.2,0.35,1)]
               -translate-y-4 scale-[0.97]"
        data-anim
        aria-hidden="true"
        role="menu"
      >
        <ul class="py-2">
          <!-- Staggered menu items -->
          <li class="transition-opacity duration-300 delay-75 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="#hello">
              <span class="material-symbols-rounded">waving_hand</span>
              <span>Hello</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-100 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="#playground">
              <span class="material-symbols-rounded">science</span>
              <span>Playground</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-125 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="#field-notes">
              <span class="material-symbols-rounded">edit_note</span>
              <span>Field Notes</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-150 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="#contact">
              <span class="material-symbols-rounded">mail</span>
              <span>Contact</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-175 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href={import.meta.env.DEV ? 'http://localhost:4322/' : 'https://constellation.wenzelarifiandi.com'}>
              <span class="material-symbols-rounded">stars</span>
              <span>Constellation</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-200 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href={studioHref}>
              <span class="material-symbols-rounded">palette</span>
              <span>Studio</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <!-- Maker menu -->
  <div id="maker-menu"
       class="absolute inset-x-0 top-full mt-2"
       hidden>
    <div class="max-w-container mx-auto px-pad-x">
      <div
        class="glass transform-gpu px-glass-x py-3
               origin-top will-change-transform will-change-opacity
               transition-[opacity,transform] duration-[420ms]
               ease-[cubic-bezier(0.2,1.2,0.35,1)]
               -translate-y-4 scale-[0.97]"
        data-anim
        aria-hidden="true"
        role="menu"
      >
        <ul class="py-2">
          <!-- Staggered menu items -->
          <li class="transition-opacity duration-300 delay-75 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="https://neve.wenzelarifiandi.com">
              <span class="material-symbols-rounded">hub</span>
              <span>Neve</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-100 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="https://etoile.wenzelarifiandi.com">
              <span class="material-symbols-rounded">cloud_upload</span>
              <span>Etoile</span>
            </a>
          </li>
          <li class="transition-opacity duration-300 delay-125 opacity-0 data-[open=true]:opacity-100">
            <a class="mobile-menu-item" role="menuitem" href="/signout">
              <span class="material-symbols-rounded">logout</span>
              <span>Logout</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</nav>


<style>
  /* Apple liquid glass navbar with M3 expressive design using Tailwind .glass utility */

  /* Mobile menu glass safeguard: ensure the panel stacks above content */
  #mobile-menu {
    z-index: 60; /* above the navbar's z-index (navbar uses z-50) */
    pointer-events: auto;
  }

  /* M3 expressive chip with proper styling */
  .chip-m3 {
    background: var(--md-sys-color-primary, #7150D9);
    color: var(--md-sys-color-on-primary, #fff);
    border: 0;
    border-radius: 999px;
    padding: .45rem .8rem;
    box-shadow: var(--md-sys-elevation-1, 0 6px 20px rgba(0,0,0,.06));
    cursor: pointer;
    font-weight: 650;
    white-space: nowrap;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 0 1 auto;
    transition: transform var(--md-sys-motion-duration-short, 200ms) var(--md-sys-motion-ease-standard, ease-out),
                box-shadow var(--md-sys-motion-duration-short, 200ms) var(--md-sys-motion-ease-standard, ease-out);
  }

  .chip-m3:hover {
    box-shadow: var(--md-sys-elevation-2, 0 12px 28px rgba(0,0,0,.08));
    transform: translateY(-1px);
  }

  /* Brand styling */
  .brand {
    letter-spacing: .2px;
    color: var(--ariane-text-ink, var(--ink));
    text-decoration: none !important;
  }

  .brand:hover,
  .brand:focus,
  .brand:focus-visible {
    text-decoration: none !important;
  }

  /* Nav link styling - original neat appearance */
  .nav-link {
    color: var(--ariane-text-ink, var(--ink));
    text-decoration: none !important;
    font-weight: 600;
    white-space: nowrap;
    padding: 4px 8px;
    border-radius: 10px;
    transition: background 0.2s ease, color 0.2s ease;
    font-size: inherit;
    line-height: 1.15;
  }

  .nav-link:hover,
  .nav-link:focus,
  .nav-link:visited,
  .nav-link:active {
    background: var(--ariane-hover-wash, rgba(255,255,255,.15));
    color: var(--ariane-text-ink-dim, rgba(0,0,0,.8));
    text-decoration: none !important;
  }


  /* Mobile menu items (card-style) */
  .mobile-menu-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    margin: 0.25rem 0.5rem;
    border-radius: 12px;
    color: var(--ariane-body-text);
    text-decoration: none;
    transition: all 0.2s ease;
    font-size: var(--body);
    line-height: 1.2;
  }

  .mobile-menu-item:hover,
  .mobile-menu-item:focus {
    background: var(--ariane-hover-wash, rgba(255,255,255,.15));
    color: var(--ariane-text-ink-dim);
    text-decoration: none;
    transform: translateY(-1px);
  }

  .mobile-menu-item .material-symbols-rounded {
    color: var(--ariane-text-ink);
    font-size: 20px;
  }

  /* Compact state for narrow screens */
  .chip-m3.compact .label {
    display: none;
  }
  .chip-m3.compact {
    padding: .45rem .6rem;
  }

  /* Responsive label hiding */
  @media (max-width: 500px) {
    .chip-m3 .label {
      display: none;
    }
    .chip-m3 {
      padding: .45rem .6rem;
    }
  }
</style>

<script type="module" is:inline>
  const qs = (s) => document.querySelector(s);

  const urlParams = new URLSearchParams(window.location.search);
  const accessMessage = urlParams.get('__cf_access_message');
  if (accessMessage === 'logged_out') {
    try {
      sessionStorage.removeItem('maker_authenticated');
    } catch (error) {
      console.warn('[Nav] Unable to clear maker auth session flag after logout', error);
    }

    urlParams.delete('__cf_access_message');
    const remaining = urlParams.toString();
    const newUrl = `${window.location.pathname}${remaining ? `?${remaining}` : ''}${window.location.hash}`;
    window.history.replaceState({}, '', newUrl);
  }

  // Darkens the glass as you scroll down
  const onScroll = () => {
    if (window.scrollY > 24) {
      document.documentElement.classList.add('scrolled');
    } else {
      document.documentElement.classList.remove('scrolled');
    }
  };
  addEventListener('scroll', onScroll, { passive: true });
  onScroll();


  const creatorToggle = qs('#creator-toggle');
  const makerMenuWrap = qs('#maker-menu');
  const makerMenuPanel = makerMenuWrap?.querySelector('[data-anim]');
  const makerMenuItems = makerMenuWrap?.querySelectorAll('li');
  const isLocalhost = /localhost|127\.0\.0\.1/.test(window.location.hostname);
  const navRoot = qs('nav[data-team-domain]');
  const publicTeamDomain = navRoot?.getAttribute('data-team-domain') || 'wenzelarifiandi.cloudflareaccess.com';

  const buildAccessLoginUrl = () => {
    if (isLocalhost) {
      return '/maker';
    }

    const teamDomain = publicTeamDomain || 'wenzelarifiandi.cloudflareaccess.com';
    const base = `https://${teamDomain}/cdn-cgi/access/login/wenzelarifiandi.com`;
    const u = new URL(base);
    u.searchParams.set('prompt', 'login');
    u.searchParams.set('redirect_url', '/maker');
    return u.toString();
  };

  // Auto-open Maker menu if redirected from /maker after authentication
  if (urlParams.get('maker') === 'open') {
    // Remove the query param from URL without reloading
    urlParams.delete('maker');
    const remaining = urlParams.toString();
    const newUrl = `${window.location.pathname}${remaining ? `?${remaining}` : ''}${window.location.hash}`;
    window.history.replaceState({}, '', newUrl);
    // Open the menu after a short delay
    setTimeout(() => openMakerMenu(true), 100);
  }

  // Maker menu toggle functionality
  let makerItemsPrimed = false;
  function setMakerItemsOpen(open) {
    if (!makerMenuItems) return;
    if (!makerItemsPrimed) {
      makerMenuItems.forEach(li => li.setAttribute('data-open', 'false'));
      makerItemsPrimed = true;
    }
    makerMenuItems.forEach(li => li.setAttribute('data-open', open ? 'true' : 'false'));
  }

  function openMakerMenu(open) {
    if (!creatorToggle || !makerMenuWrap || !makerMenuPanel) return;

    creatorToggle.setAttribute('aria-expanded', String(open));

    if (open) {
      makerMenuWrap.hidden = false;
      makerMenuPanel.style.transitionTimingFunction = 'cubic-bezier(0.2, 1.2, 0.35, 1)';
      makerMenuPanel.style.transitionDuration = '420ms';
      requestAnimationFrame(() => {
        makerMenuPanel.classList.remove('-translate-y-4', 'scale-[0.97]');
        makerMenuPanel.classList.add('translate-y-0', 'scale-100');
        setMakerItemsOpen(true);
      });
    } else {
      makerMenuPanel.style.transitionTimingFunction = 'cubic-bezier(0.3, 0, 0.8, 0.15)';
      makerMenuPanel.style.transitionDuration = '280ms';
      makerMenuPanel.classList.add('-translate-y-4', 'scale-[0.97]');
      makerMenuPanel.classList.remove('translate-y-0', 'scale-100');
      setMakerItemsOpen(false);
      makerMenuPanel.addEventListener('transitionend', () => (makerMenuWrap.hidden = true), { once: true });
    }
  }

  // Main Maker button click handler - require authentication, then show dropdown
  creatorToggle?.addEventListener('click', async () => {
    // Check if user is authenticated by trying to access the protected /maker endpoint
    try {
      const response = await fetch('/maker', {
        method: 'HEAD',
        credentials: 'include'
      });

      if (response.ok) {
        // Authenticated - toggle the dropdown menu
        const isOpen = creatorToggle.getAttribute('aria-expanded') === 'true';
        openMakerMenu(!isOpen);
      } else {
        // Not authenticated - go through Cloudflare Access login with prompt=login to prevent silent SSO
        window.location.href = buildAccessLoginUrl();
      }
    } catch (error) {
      // On error, still force Cloudflare Access login prompt
      window.location.href = buildAccessLoginUrl();
    }
  });

  // M3 Expressive Mobile Menu
  const exploreBtn = qs('#explore-toggle');
  const mobileMenuWrap = qs('#mobile-menu');
  const mobileMenuPanel = mobileMenuWrap?.querySelector('[data-anim]');
  const menuItems = mobileMenuWrap?.querySelectorAll('li');

  // ensure menu items get their data-open on first open
  let itemsPrimed = false;
  function setItemsOpen(open) {
    if (!menuItems) return;
    if (!itemsPrimed) {
      menuItems.forEach(li => li.setAttribute('data-open', 'false'));
      itemsPrimed = true;
    }
    menuItems.forEach(li => li.setAttribute('data-open', open ? 'true' : 'false'));
  }

  function openMobileMenu(open) {
    if (!exploreBtn || !mobileMenuWrap || !mobileMenuPanel) return;

    exploreBtn.setAttribute('aria-expanded', String(open));

    if (open) {
      mobileMenuWrap.hidden = false;
      // ENTER (M3 expressive): overshooty, longer duration
      mobileMenuPanel.style.transitionTimingFunction = 'cubic-bezier(0.2, 1.2, 0.35, 1)';
      mobileMenuPanel.style.transitionDuration = '420ms';
      requestAnimationFrame(() => {
        mobileMenuPanel.classList.remove('-translate-y-4', 'scale-[0.97]');
        mobileMenuPanel.classList.add('translate-y-0', 'scale-100');
        setItemsOpen(true);
      });
    } else {
      // EXIT: snappier, no overshoot
      mobileMenuPanel.style.transitionTimingFunction = 'cubic-bezier(0.3, 0, 0.8, 0.15)';
      mobileMenuPanel.style.transitionDuration = '280ms';
      mobileMenuPanel.classList.add('-translate-y-4', 'scale-[0.97]');
      mobileMenuPanel.classList.remove('translate-y-0', 'scale-100');
      setItemsOpen(false);
      mobileMenuPanel.addEventListener('transitionend', () => (mobileMenuWrap.hidden = true), { once: true });
    }
  }

  // Mobile menu event listeners
  exploreBtn?.addEventListener('click', () => {
    const isOpen = exploreBtn.getAttribute('aria-expanded') === 'true';
    openMobileMenu(!isOpen);
  });

  // Click outside / Esc to close
  document.addEventListener('click', (e) => {
    const target = e.target;
    const insideMobileMenu = target instanceof Element && target.closest('#mobile-menu');
    const onExploreToggle = target instanceof Element && target.closest('#explore-toggle');
    const insideMakerMenu = target instanceof Element && target.closest('#maker-menu');
    const onMakerToggle = target instanceof Element && target.closest('#creator-toggle');

    if (!mobileMenuWrap?.hidden && !insideMobileMenu && !onExploreToggle) {
      openMobileMenu(false);
    }

    if (!makerMenuWrap?.hidden && !insideMakerMenu && !onMakerToggle) {
      openMakerMenu(false);
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      openMobileMenu(false);
      openMakerMenu(false);
    }
  });

  // Close mobile menu when clicking a link
  mobileMenuWrap?.addEventListener('click', (e) => {
    if (e.target.tagName === 'A') {
      openMobileMenu(false);
    }
  });

  // Close maker menu when clicking a link
  makerMenuWrap?.addEventListener('click', (e) => {
    const target = e.target;
    if (!(target instanceof Element)) return;
    const link = target.closest('a');
    if (link) {
      if (link.getAttribute('href') === '/signout') {
        try {
          sessionStorage.removeItem('maker_authenticated');
        } catch (error) {
          console.warn('[Nav] Unable to clear maker auth session flag on logout click', error);
        }
      }
      openMakerMenu(false);
    }
  });

  // Close menus on resize to avoid stuck state
  let lastWidth = window.innerWidth;
  addEventListener('resize', () => {
    const current = window.innerWidth;
    if (lastWidth < 1024 && current >= 1024) {
      openMobileMenu(false);
      openMakerMenu(false);
    }
    lastWidth = current;
  }, { passive: true });
</script>
