---
import { useStoryblokApi } from '@storyblok/astro'
import { getStoryblokVersion } from '../../lib/storyblok/version'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Base from '../../layouts/Base.astro'

const storyblokApi = useStoryblokApi()
type StoryblokStory = { name: string; content?: Record<string, any> }
let story: StoryblokStory | null = null
let error: string | null = null

const version = getStoryblokVersion({ mode: import.meta.env.MODE, hasPreview: Astro.url.searchParams.has('_storyblok') })

try {
  const { data } = await storyblokApi.get('cdn/stories/work', { version })
  story = (data?.story ?? null) as StoryblokStory | null
} catch (e: unknown) {
  error = e instanceof Error ? e.message : 'Failed to load Work content'
}
const page = { title: story?.name ? `${story.name} — Ariane` : 'Work — Ariane', description: story?.content?.description ?? 'Selected projects' }
---

<Base title={page.title} description={page.description} pathname="/work">
  {story ? (
    story.content ? (
      <StoryblokComponent blok={story.content as any} />
    ) : (
      <p class="mt-6 text-neutral-500">No Work content available.</p>
    )
  ) : error ? (
    <p class="mt-6 text-neutral-500">Could not load Work content. <small>{error}</small></p>
  ) : (
    <p class="mt-6 text-neutral-500">Loading Work…</p>
  )}
</Base>
