---
import { useStoryblokApi } from '@storyblok/astro'
import { getStoryblokVersion } from '../lib/storyblok/version'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Base from '../layouts/Base.astro'
import Nav from '../components/Nav.astro'
import Footer from '../components/Footer.astro'
import '../styles/global.css'

const storyblokApi = useStoryblokApi()
type StoryblokStory = { name: string; content?: Record<string, any>; }
let story: StoryblokStory | null = null
let error: string | null = null

const version = getStoryblokVersion({ mode: import.meta.env.MODE, hasPreview: Astro.url.searchParams.has('_storyblok') })

try {
  const { data } = await storyblokApi.get('cdn/stories/home', { version })
  story = (data?.story ?? null) as StoryblokStory | null
} catch (e: unknown) {
  error = e instanceof Error ? e.message : 'Failed to load Storyblok content'
}

const page = {
  title: story?.name ? `${story.name} - Wenzel Arifiandi` : 'Wenzel Arifiandi',
  description: story?.content?.description || 'Content managed with Storyblok',
  url: 'https://wenzelarifiandi.com/',
  image: '/og.jpg',
}
const email = 'hello@wenzelarifiandi.com'
---

<Base title={page.title} description={page.description} ogImage={page.image} pathname="/">
  <Nav />

  {story ? (
    story.content ? (
      <StoryblokComponent blok={story.content as any} />
    ) : (
      <section class="max-w-[1100px] mx-auto px-pad-x pt-20"><div><p>No content available.</p></div></section>
    )
  ) : error ? (
    <section class="max-w-[1100px] mx-auto px-pad-x pt-20">
      <div>
        <h1>Content Not Available</h1>
        <p>We couldn't load the homepage content.</p>
        <p><small>Error: {error}</small></p>
      </div>
    </section>
  ) : (
    <section class="max-w-[1100px] mx-auto px-pad-x pt-20">
      <div>
        <h1>Loading…</h1>
        <p>Fetching content from Storyblok…</p>
      </div>
    </section>
  )}


  <!-- Main content sections -->
  <section id="hello" class="max-w-[1100px] mx-auto px-pad-x pt-20">
    <div>
      <h2>Hello</h2>
      <p class="muted">Glad you're here!</p>
      <br><br><br><br><br><br><br><br><br><br>
    </div>
  </section>

  <section id="playground" class="max-w-[1100px] mx-auto px-pad-x pt-20">
    <div>
      <h2>Playground</h2>
      <p class="muted">Getting started...</p>
      <br><br><br><br><br><br><br><br><br><br>
    </div>
  </section>

  <section id="field-notes" class="max-w-[1100px] mx-auto px-pad-x pt-20">
    <div>
      <h2>Field Notes</h2>
      <p class="muted">It's coming together...</p>
      <br><br><br><br><br><br><br><br><br><br>
    </div>
  </section>

  <section id="contact" class="max-w-[1100px] mx-auto px-pad-x pt-20">
    <div>
      <h2>Contact</h2>
      <p class="muted">Email me at <a href={`mailto:${email}`} class="accent">{email}</a>.</p>
      <br><br><br><br><br><br><br><br><br><br>
    </div>
  </section>
  <Footer />
</Base>

<style>
  h2 { font-size: var(--h2); letter-spacing: -0.01em; margin-bottom: .5rem; color: var(--ariane-heading-text); }
  .muted { color: var(--ariane-subtext); }
  .accent { color: var(--ariane-link-text); }
  #contact { padding-bottom: clamp(64px, 10vw, 120px); }

  /* Background for glass effect */
  body {
    background: var(--ariane-bg-main) !important;
    background-color: var(--ariane-bg-main) !important;
    min-height: 100vh;
  }

  /* Scroll offset to account for sticky navbar */
  html {
    scroll-padding-top: 100px;
  }
</style>
