---
import { useStoryblokApi } from '@storyblok/astro'
import { getStoryblokVersion } from '../lib/storyblok/version'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import Base from '../layouts/Base.astro'

const storyblokApi = useStoryblokApi()
type StoryblokStory = { name: string; content?: Record<string, any> }
let story: StoryblokStory | null = null
let error: string | null = null

const version = getStoryblokVersion({ mode: import.meta.env.MODE, hasPreview: Astro.url.searchParams.has('_storyblok') })

try {
  const { data } = await storyblokApi.get('cdn/stories/links', { version })
  story = (data?.story ?? null) as StoryblokStory | null
} catch (e: unknown) {
  error = e instanceof Error ? e.message : 'Failed to load Links content'
}
---
<Base title={story?.name ? `${story.name} — Ariane` : 'Links — Ariane'} description={story?.content?.description ?? 'Curated links.'}>
  {story ? (
    story.content ? (
      <StoryblokComponent blok={story.content as any} />
    ) : (
      <p class="mt-6 text-neutral-500">No Links content available.</p>
    )
  ) : error ? (
    <p class="mt-6 text-neutral-500">Could not load Links content. <small>{error}</small></p>
  ) : (
    <p class="mt-6 text-neutral-500">Loading Links…</p>
  )}
</Base>
