name: üõ°Ô∏è Auto Security Fixes

on:
  schedule:
    # Run daily at 2 AM UTC to check for security issues
    - cron: '0 2 * * *'
  workflow_dispatch:
  # Trigger when Dependabot creates PRs
  pull_request:
    types: [opened, synchronize]
    branches: [main]

env:
  NODE_VERSION: '22.x'

jobs:
  auto-fix-vulnerabilities:
    name: üîß Auto Fix Security Vulnerabilities
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          site/package-lock.json
          studio/package-lock.json

    - name: üîç Audit Site Dependencies
      id: site-audit
      run: |
        cd site
        echo "Running security audit for site..."

        # Capture audit output
        npm audit --audit-level=moderate --json > audit-site.json || true

        # Check if vulnerabilities exist
        if [ -s audit-site.json ]; then
          vulnerabilities=$(cat audit-site.json | jq -r '.metadata.vulnerabilities.total // 0')
          echo "site_vulnerabilities=$vulnerabilities" >> $GITHUB_OUTPUT
          echo "üîç Found $vulnerabilities vulnerabilities in site"
        else
          echo "site_vulnerabilities=0" >> $GITHUB_OUTPUT
          echo "‚úÖ No vulnerabilities found in site"
        fi

    - name: üîç Audit Studio Dependencies
      id: studio-audit
      run: |
        cd studio
        echo "Running security audit for studio..."

        # Capture audit output
        npm audit --audit-level=moderate --json > audit-studio.json || true

        # Check if vulnerabilities exist
        if [ -s audit-studio.json ]; then
          vulnerabilities=$(cat audit-studio.json | jq -r '.metadata.vulnerabilities.total // 0')
          echo "studio_vulnerabilities=$vulnerabilities" >> $GITHUB_OUTPUT
          echo "üîç Found $vulnerabilities vulnerabilities in studio"
        else
          echo "studio_vulnerabilities=0" >> $GITHUB_OUTPUT
          echo "‚úÖ No vulnerabilities found in studio"
        fi

    - name: üõ†Ô∏è Auto Fix Site Vulnerabilities
      if: steps.site-audit.outputs.site_vulnerabilities != '0'
      run: |
        cd site
        echo "üîß Attempting to auto-fix site vulnerabilities..."

        # Try safe fixes first
        npm audit fix --dry-run
        npm audit fix || true

        # Try force fixes for remaining issues
        remaining=$(npm audit --audit-level=moderate --json | jq -r '.metadata.vulnerabilities.total // 0')
        if [ "$remaining" -gt 0 ]; then
          echo "üö® $remaining vulnerabilities remain, trying force fixes..."
          npm audit fix --force || true
        fi

        echo "‚úÖ Site vulnerability fixes applied"

    - name: üõ†Ô∏è Auto Fix Studio Vulnerabilities
      if: steps.studio-audit.outputs.studio_vulnerabilities != '0'
      run: |
        cd studio
        echo "üîß Attempting to auto-fix studio vulnerabilities..."

        # Try safe fixes first
        npm audit fix --dry-run
        npm audit fix || true

        # Try force fixes for remaining issues
        remaining=$(npm audit --audit-level=moderate --json | jq -r '.metadata.vulnerabilities.total // 0')
        if [ "$remaining" -gt 0 ]; then
          echo "üö® $remaining vulnerabilities remain, trying force fixes..."
          npm audit fix --force || true
        fi

        echo "‚úÖ Studio vulnerability fixes applied"

    - name: üß™ Test After Fixes
      run: |
        echo "üß™ Testing applications after security fixes..."

        # Test site build
        cd site
        if npm run build; then
          echo "‚úÖ Site builds successfully"
        else
          echo "‚ùå Site build failed after security fixes"
          exit 1
        fi

        # Test studio build
        cd ../studio
        if npm run build; then
          echo "‚úÖ Studio builds successfully"
        else
          echo "‚ùå Studio build failed after security fixes"
          exit 1
        fi

    - name: üìä Generate Security Report
      id: report
      run: |
        echo "üìä Generating security fix report..."

        # Final audit
        cd site
        site_final=$(npm audit --audit-level=moderate --json | jq -r '.metadata.vulnerabilities.total // 0')

        cd ../studio
        studio_final=$(npm audit --audit-level=moderate --json | jq -r '.metadata.vulnerabilities.total // 0')

        # Create report
        cat > security-report.md << EOF
        # üõ°Ô∏è Automated Security Fix Report

        **Date:** $(date -Iseconds)
        **Trigger:** ${{ github.event_name }}

        ## Results

        ### Site Dependencies
        - **Before:** ${{ steps.site-audit.outputs.site_vulnerabilities }} vulnerabilities
        - **After:** $site_final vulnerabilities
        - **Fixed:** $((${{ steps.site-audit.outputs.site_vulnerabilities }} - $site_final))

        ### Studio Dependencies
        - **Before:** ${{ steps.studio-audit.outputs.studio_vulnerabilities }} vulnerabilities
        - **After:** $studio_final vulnerabilities
        - **Fixed:** $((${{ steps.studio-audit.outputs.studio_vulnerabilities }} - $studio_final))

        ## Actions Taken
        - ‚úÖ Automated npm audit fix applied
        - ‚úÖ Build tests passed
        - ‚úÖ Dependencies updated

        **Total vulnerabilities resolved:** $((${{ steps.site-audit.outputs.site_vulnerabilities }} + ${{ steps.studio-audit.outputs.studio_vulnerabilities }} - $site_final - $studio_final))
        EOF

        echo "report_path=security-report.md" >> $GITHUB_OUTPUT

    - name: üíæ Commit Security Fixes
      id: commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if there are changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          git add site/package*.json studio/package*.json

          git commit -m "$(cat <<'EOF'
        security: automated vulnerability fixes

        - Applied npm audit fix to resolve security vulnerabilities
        - Updated dependencies to secure versions
        - Verified builds pass after updates

        ü§ñ Automated security fix by GitHub Actions
        üöÄ Generated with [Claude Code](https://claude.ai/code)

        Co-Authored-By: GitHub Action <action@github.com>
        EOF
        )"

          echo "changes_committed=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Security fixes committed"
        else
          echo "changes_committed=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è No changes to commit"
        fi

    - name: üì§ Push Changes
      if: steps.commit.outputs.changes_committed == 'true'
      run: |
        git push
        echo "üöÄ Security fixes pushed to repository"

    - name: üìã Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-report-${{ github.run_number }}
        path: security-report.md
        retention-days: 30

  dependabot-auto-merge:
    name: üîÄ Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üîç Check PR Details
      id: pr-check
      run: |
        # Check if this is a security update
        if echo "${{ github.event.pull_request.title }}" | grep -i "security\|vulnerability\|cve"; then
          echo "is_security=true" >> $GITHUB_OUTPUT
          echo "üîí Security-related PR detected"
        else
          echo "is_security=false" >> $GITHUB_OUTPUT
          echo "üì¶ Regular dependency update"
        fi

        # Check if it's a patch or minor update
        if echo "${{ github.event.pull_request.title }}" | grep -E "patch|minor"; then
          echo "is_safe_update=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Safe update (patch/minor) detected"
        else
          echo "is_safe_update=false" >> $GITHUB_OUTPUT
          echo "‚ö†Ô∏è Major update detected"
        fi

    - name: ‚úÖ Auto-approve Security PRs
      if: steps.pr-check.outputs.is_security == 'true' || steps.pr-check.outputs.is_safe_update == 'true'
      continue-on-error: true
      run: |
        gh pr review --approve "${{ github.event.pull_request.number }}" --body "ü§ñ Auto-approved security/patch update" || {
          echo "‚ö†Ô∏è Failed to auto-approve PR - may require manual approval"
          echo "This could be due to branch protection rules or permissions"
        }
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: üîÄ Auto-merge Safe PRs
      if: steps.pr-check.outputs.is_security == 'true' || steps.pr-check.outputs.is_safe_update == 'true'
      continue-on-error: true
      run: |
        if gh pr merge "${{ github.event.pull_request.number }}" --auto --squash; then
          echo "üéâ PR queued for auto-merge after checks pass"
        else
          echo "‚ö†Ô∏è Auto-merge failed - may require manual merge"
          echo "Possible reasons:"
          echo "  - Branch protection rules prevent auto-merge"
          echo "  - Required status checks not passed"
          echo "  - Insufficient permissions"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: üí¨ Comment on Major Updates
      if: steps.pr-check.outputs.is_safe_update == 'false' && steps.pr-check.outputs.is_security == 'false'
      run: |
        gh pr comment "${{ github.event.pull_request.number }}" --body "‚ö†Ô∏è **Major version update detected!**

        This PR contains major version changes that may include breaking changes.
        Please review manually before merging.

        üîç **Review checklist:**
        - [ ] Check CHANGELOG for breaking changes
        - [ ] Run tests locally
        - [ ] Verify deployment works

        ü§ñ *Auto-merge skipped for safety*"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}