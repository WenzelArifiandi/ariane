name: 🔧 Force Security Updates

on:
  workflow_dispatch:
    inputs:
      force_updates:
        description: 'Force update vulnerable dependencies'
        required: true
        default: true
        type: boolean
  schedule:
    # Run weekly on Sundays to force-update stubborn vulnerabilities
    - cron: '0 4 * * 0'

permissions:
  contents: write
  actions: read

jobs:
  force-security-updates:
    name: 🔧 Force Update Vulnerable Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: |
          site/package-lock.json
          studio/package-lock.json

    - name: 📊 Pre-Update Vulnerability Assessment
      id: pre-audit
      run: |
        echo "🔍 Checking vulnerabilities before updates..."

        # Site vulnerabilities
        cd site
        site_vulns_before=$(npm audit --audit-level=moderate --json 2>/dev/null | jq -r '.metadata.vulnerabilities.total // 0' || echo "0")
        echo "site_vulns_before=$site_vulns_before" >> $GITHUB_OUTPUT
        echo "Site vulnerabilities before: $site_vulns_before"

        # Studio vulnerabilities
        cd ../studio
        studio_vulns_before=$(npm audit --audit-level=moderate --json 2>/dev/null | jq -r '.metadata.vulnerabilities.total // 0' || echo "0")
        echo "studio_vulns_before=$studio_vulns_before" >> $GITHUB_OUTPUT
        echo "Studio vulnerabilities before: $studio_vulns_before"

        cd ..

    - name: 🛠️ Force Update Site Dependencies
      run: |
        cd site
        echo "🔧 Force updating site dependencies..."

        # First try safe fixes
        npm audit fix || true

        # Force fix remaining vulnerabilities
        echo "⚡ Applying force fixes..."
        npm audit fix --force || true

        # Update specific problematic packages
        echo "📦 Updating specific vulnerable packages..."
        npm update @astrojs/vercel || true
        npm update @vercel/routing-utils || true

        # Clean install to ensure consistency
        echo "🧹 Clean install to ensure consistency..."
        rm -rf node_modules package-lock.json
        npm install

    - name: 🛠️ Force Update Studio Dependencies
      run: |
        cd studio
        echo "🔧 Force updating studio dependencies..."

        # First try safe fixes
        npm audit fix || true

        # Force fix remaining vulnerabilities
        echo "⚡ Applying force fixes..."
        npm audit fix --force || true

        # Update specific problematic packages
        echo "📦 Updating specific vulnerable packages..."
        npm update @vercel/node || true

        # Clean install to ensure consistency
        echo "🧹 Clean install to ensure consistency..."
        rm -rf node_modules package-lock.json
        npm install

    - name: 🧪 Test Builds After Updates
      id: build-test
      run: |
        echo "🧪 Testing builds after security updates..."

        # Test site build
        cd site
        if npm run build; then
          echo "site_build=success" >> $GITHUB_OUTPUT
          echo "✅ Site builds successfully"
        else
          echo "site_build=failed" >> $GITHUB_OUTPUT
          echo "❌ Site build failed"
        fi

        # Test studio build
        cd ../studio
        if npm run build; then
          echo "studio_build=success" >> $GITHUB_OUTPUT
          echo "✅ Studio builds successfully"
        else
          echo "studio_build=failed" >> $GITHUB_OUTPUT
          echo "❌ Studio build failed"
        fi

    - name: 📊 Post-Update Vulnerability Assessment
      id: post-audit
      run: |
        echo "🔍 Checking vulnerabilities after updates..."

        # Site vulnerabilities
        cd site
        site_vulns_after=$(npm audit --audit-level=moderate --json 2>/dev/null | jq -r '.metadata.vulnerabilities.total // 0' || echo "0")
        echo "site_vulns_after=$site_vulns_after" >> $GITHUB_OUTPUT
        echo "Site vulnerabilities after: $site_vulns_after"

        # Studio vulnerabilities
        cd ../studio
        studio_vulns_after=$(npm audit --audit-level=moderate --json 2>/dev/null | jq -r '.metadata.vulnerabilities.total // 0' || echo "0")
        echo "studio_vulns_after=$studio_vulns_after" >> $GITHUB_OUTPUT
        echo "Studio vulnerabilities after: $studio_vulns_after"

        cd ..

    - name: 📋 Generate Update Report
      run: |
        echo "📋 Generating security update report..."

        cat > security-update-report.md << EOF
        # 🛡️ Force Security Update Report

        **Date:** $(date -Iseconds)
        **Trigger:** ${{ github.event_name }}

        ## Vulnerability Reduction

        ### Site Dependencies
        - **Before:** ${{ steps.pre-audit.outputs.site_vulns_before }} vulnerabilities
        - **After:** ${{ steps.post-audit.outputs.site_vulns_after }} vulnerabilities
        - **Reduction:** $((${{ steps.pre-audit.outputs.site_vulns_before }} - ${{ steps.post-audit.outputs.site_vulns_after }})) vulnerabilities fixed

        ### Studio Dependencies
        - **Before:** ${{ steps.pre-audit.outputs.studio_vulns_before }} vulnerabilities
        - **After:** ${{ steps.post-audit.outputs.studio_vulns_after }} vulnerabilities
        - **Reduction:** $((${{ steps.pre-audit.outputs.studio_vulns_before }} - ${{ steps.post-audit.outputs.studio_vulns_after }})) vulnerabilities fixed

        ## Build Status
        - **Site Build:** ${{ steps.build-test.outputs.site_build }}
        - **Studio Build:** ${{ steps.build-test.outputs.studio_build }}

        ## Actions Taken
        - ✅ Applied npm audit fix
        - ✅ Applied force security updates
        - ✅ Updated vulnerable packages
        - ✅ Performed clean reinstall
        - ✅ Verified build compatibility

        ## Summary
        **Total vulnerabilities fixed:** $((${{ steps.pre-audit.outputs.site_vulns_before }} + ${{ steps.pre-audit.outputs.studio_vulns_before }} - ${{ steps.post-audit.outputs.site_vulns_after }} - ${{ steps.post-audit.outputs.studio_vulns_after }}))

        ---
        🤖 *Automated by Force Security Updates workflow*
        EOF

        cat security-update-report.md

    - name: 📋 Upload Update Report
      uses: actions/upload-artifact@v4
      with:
        name: security-update-report-${{ github.run_number }}
        path: security-update-report.md
        retention-days: 30

    - name: 💾 Commit Security Updates
      if: steps.build-test.outputs.site_build == 'success' && steps.build-test.outputs.studio_build == 'success'
      run: |
        git config --local user.email "security-updates@github.com"
        git config --local user.name "Security Updates Bot"

        # Check if there are changes to commit
        if [ -n "$(git status --porcelain)" ]; then
          git add site/package*.json studio/package*.json

          git commit -m "security: force update vulnerable dependencies

          🔧 Force security updates applied:
          - Site vulnerabilities: ${{ steps.pre-audit.outputs.site_vulns_before }} → ${{ steps.post-audit.outputs.site_vulns_after }}
          - Studio vulnerabilities: ${{ steps.pre-audit.outputs.studio_vulns_before }} → ${{ steps.post-audit.outputs.studio_vulns_after }}
          - Total fixed: $((${{ steps.pre-audit.outputs.site_vulns_before }} + ${{ steps.pre-audit.outputs.studio_vulns_before }} - ${{ steps.post-audit.outputs.site_vulns_after }} - ${{ steps.post-audit.outputs.studio_vulns_after }})) vulnerabilities

          Actions taken:
          - Applied npm audit fix --force
          - Updated vulnerable packages to latest versions
          - Performed clean reinstalls
          - Verified build compatibility

          🤖 Automated by Force Security Updates
          🚀 Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Security Updates Bot <security-updates@github.com>"

          git push
          echo "✅ Security updates committed and pushed"
        else
          echo "ℹ️ No changes to commit"
        fi

    - name: ❌ Rollback on Build Failure
      if: steps.build-test.outputs.site_build == 'failed' || steps.build-test.outputs.studio_build == 'failed'
      run: |
        echo "🆘 Build failed after updates, rolling back changes..."
        git checkout -- site/package*.json studio/package*.json

        # Reinstall original dependencies
        cd site && npm install
        cd ../studio && npm install

        echo "🔄 Rollback completed - reverting to original dependencies"
        echo "⚠️ Manual intervention required for security updates"

    - name: 📊 Final Status Summary
      run: |
        echo "📊 Force Security Update Summary:"
        echo "================================"
        echo "Site vulnerabilities: ${{ steps.pre-audit.outputs.site_vulns_before }} → ${{ steps.post-audit.outputs.site_vulns_after }}"
        echo "Studio vulnerabilities: ${{ steps.pre-audit.outputs.studio_vulns_before }} → ${{ steps.post-audit.outputs.studio_vulns_after }}"
        echo "Site build: ${{ steps.build-test.outputs.site_build }}"
        echo "Studio build: ${{ steps.build-test.outputs.studio_build }}"

        total_fixed=$((${{ steps.pre-audit.outputs.site_vulns_before }} + ${{ steps.pre-audit.outputs.studio_vulns_before }} - ${{ steps.post-audit.outputs.site_vulns_after }} - ${{ steps.post-audit.outputs.studio_vulns_after }}))
        echo "Total vulnerabilities fixed: $total_fixed"

        if [ "$total_fixed" -gt 0 ] && [ "${{ steps.build-test.outputs.site_build }}" = "success" ] && [ "${{ steps.build-test.outputs.studio_build }}" = "success" ]; then
          echo "🎉 Security update successful!"
        else
          echo "⚠️ Security update completed with issues - check logs"
        fi