name: 🔍 Security Scanning & Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: "0 3 * * 0"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write
  issues: write

jobs:
  dependency-scanning:
    name: 🛡️ Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@915b19bbe73b92a6cf82a1bc12b087c9a19a5fe2 # v0.28.0
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"
          exit-code: "0"
          ignore-unfixed: true

      - name: 📊 Upload Trivy Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  docker-security-scan:
    name: 🐳 Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Scan Zitadel Docker Config
        uses: aquasecurity/trivy-action@915b19bbe73b92a6cf82a1bc12b087c9a19a5fe2 # v0.28.0
        with:
          scan-type: "config"
          scan-ref: "zitadel/"
          format: "sarif"
          output: "docker-config-results.sarif"
          exit-code: "0"
          ignore-unfixed: true

      - name: 📊 Upload Docker Config Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "docker-config-results.sarif"

  secret-scanning:
    name: 🔐 Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@18c7b1fc33e6c16b27ea66ff27cc7e642fb7cd0a # v3.90.6
        continue-on-error: true
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: 🔍 GitLeaks Secret Scan
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7 # v2.3.9
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-summary:
    name: 📋 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scanning, secret-scanning]
    if: always()

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📊 Generate Security Summary
        run: |
          echo "# 🛡️ Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Scan Date:** $(date -Iseconds)" >> security-summary.md
          echo "**Repository:** ${{ github.repository }}" >> security-summary.md
          echo "**Branch:** ${{ github.ref_name }}" >> security-summary.md
          echo "" >> security-summary.md

          echo "## Scan Results" >> security-summary.md
          echo "" >> security-summary.md

          # Dependency scanning
          if [ "${{ needs.dependency-scanning.result }}" = "success" ]; then
            echo "✅ **Dependency Scanning:** Passed" >> security-summary.md
          else
            echo "❌ **Dependency Scanning:** Failed or has findings" >> security-summary.md
          fi

          # Secret scanning
          if [ "${{ needs.secret-scanning.result }}" = "success" ]; then
            echo "✅ **Secret Detection:** Passed" >> security-summary.md
          else
            echo "❌ **Secret Detection:** Failed or found secrets" >> security-summary.md
          fi

          echo "" >> security-summary.md
          echo "## Recommendations" >> security-summary.md
          echo "" >> security-summary.md
          echo "- Review any security findings in the Security tab" >> security-summary.md
          echo "- Update dependencies regularly" >> security-summary.md
          echo "- Monitor for new vulnerabilities" >> security-summary.md
          echo "- Enable Dependabot security updates" >> security-summary.md

          cat security-summary.md

      - name: 📋 Upload Security Summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary-${{ github.run_number }}
          path: security-summary.md
          retention-days: 90

      - name: 💬 Comment Security Summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  auto-fix-findings:
    name: 🔧 Auto-fix Security Findings
    runs-on: ubuntu-latest
    needs: [dependency-scanning]
    if: github.ref == 'refs/heads/main' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
          cache-dependency-path: |
            site/package-lock.json
            studio/package-lock.json

      - name: 🛠️ Apply Automated Fixes
        run: |
          echo "🔧 Applying automated security fixes..."

          # Update all dependencies to latest secure versions
          cd site
          npm update
          npm audit fix --force || true

          cd ../studio
          npm update
          npm audit fix --force || true

          cd ..

      - name: 🧪 Test After Auto-fixes
        run: |
          echo "🧪 Testing after automated fixes..."

          cd site
          npm run build || echo "Site build failed"

          cd ../studio
          npm run build || echo "Studio build failed"

      - name: 💾 Commit Auto-fixes
        run: |
          git config --local user.email "security-bot@github.com"
          git config --local user.name "Security Bot"

          # Only consider tracked package files to avoid untracked artifacts (e.g., SARIF, .cache)
          CHANGED=$(git diff --name-only -- site/package-lock.json site/package.json studio/package-lock.json studio/package.json || true)

          if [ -z "$CHANGED" ]; then
            echo "ℹ️ No security fixes needed (no tracked package files changed)"
            exit 0
          fi

          # Stage only the intended files
          git add site/package*.json studio/package*.json || true

          # If nothing actually got staged, skip committing
          if git diff --cached --quiet; then
            echo "ℹ️ No staged changes after audit fixes; skipping commit"
            exit 0
          fi

          git commit -m "security: automated dependency updates and vulnerability fixes

          🤖 Automated security maintenance:
          - Updated dependencies to latest secure versions
          - Applied npm audit fixes
          - Resolved known vulnerabilities

          🔍 Triggered by: ${{ github.event_name }}
          📅 Date: $(date -Iseconds)

          🚀 Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Security Bot <security-bot@github.com>"

          echo "✅ Automated security fixes committed locally; opening a pull request"

      - name: 📬 Open PR for Auto-fixes
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ci/security-autofix/${{ github.run_id }}
          title: "security: automated dependency updates and vulnerability fixes"
          commit-message: |
            security: automated dependency updates and vulnerability fixes

            🤖 Automated security maintenance:
            - Updated dependencies to latest secure versions
            - Applied npm audit fixes
            - Resolved known vulnerabilities

            🔍 Triggered by: ${{ github.event_name }}
          body: |
            This PR was opened automatically to apply safe security-related updates discovered by the scheduled scan.

            Please review and merge; direct pushes to `main` are blocked by branch protections.
          labels: |
            security
            automated-fix
          delete-branch: true
