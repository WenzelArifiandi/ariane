name: Security Auto-Fix

on:
  # Run weekly on Monday at 2 AM UTC
  schedule:
    - cron: "0 2 * * 1"

  # Allow manual triggering
  workflow_dispatch:
    inputs:
      mode:
        description: "Fix mode"
        required: true
        default: "conservative"
        type: choice
        options:
          - conservative
          - advanced
          - aggressive
      dry_run:
        description: "Dry run (preview changes only)"
        required: false
        default: true
        type: boolean

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_OWNER: ${{ github.repository_owner }}
  GITHUB_REPO: ${{ github.event.repository.name }}

jobs:
  security-autofix:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.changes.outputs.has_changes }}
    permissions:
      contents: write
      pull-requests: write
      security-events: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: |
          # Install any required dependencies
          npm install --no-save

      - name: Configure Git
        run: |
          git config --local user.email "security-scan@github.com"
          git config --local user.name "Security Auto-Fix Bot"

      - name: Run Security Auto-Fix (Conservative)
        if: ${{ github.event.inputs.mode == 'conservative' || github.event.inputs.mode == '' }}
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          if [[ "${DRY_RUN}" == "true" ]]; then
            npm run security:autofix:dry-run
          else
            npm run security:autofix
          fi

      - name: Run Security Auto-Fix (Advanced)
        if: ${{ github.event.inputs.mode == 'advanced' }}
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          if [[ "${DRY_RUN}" == "true" ]]; then
            npm run security:autofix:advanced:dry-run
          else
            npm run security:autofix:advanced
          fi

      - name: Run Security Auto-Fix (Aggressive)
        if: ${{ github.event.inputs.mode == 'aggressive' }}
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          if [[ "${DRY_RUN}" == "true" ]]; then
            npm run security:autofix:advanced:dry-run
          else
            npm run security:autofix:advanced:aggressive
          fi

      - name: Upload Fix Report
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: security-autofix-report
          path: |
            security-autofix-report.json
            security-autofix-advanced-report.json
          retention-days: 30

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            FILES_CHANGED=$(git diff --name-only | wc -l)
            echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          fi

      - name: Create Issue for Security Fixes
        if: steps.changes.outputs.has_changes == 'true' && github.event.inputs.dry_run != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = "üõ°Ô∏è Security Auto-Fix: CodeQL Vulnerability Fixes";
            const body = `## Security Auto-Fix Report

            This issue tracks automated fixes for CodeQL security vulnerabilities.

            **Configuration:**
            - Mode: \`${{ github.event.inputs.mode || 'conservative' }}\`
            - Files changed: ${{ steps.changes.outputs.files_changed }}
            - Triggered by: ${{ github.event_name == 'schedule' && 'Scheduled run' || 'Manual trigger' }}

            **What was fixed:**
            The security auto-fix script has analyzed the codebase and applied safe, conservative fixes for:
            - Useless assignments to local variables
            - Trivial conditionals that are always true/false
            - Type comparison issues
            - Use-before-declaration problems
            - Unneeded defensive code patterns
            - Superfluous trailing arguments
            - Unreachable statements
            - Redundant operations

            ## Next Steps
            1. Review the changes in the \`security-fixes-${{ github.run_id }}\` branch
            2. Create a pull request manually from that branch to main
            3. Review and merge the changes

            **Branch:** \`security-fixes-${{ github.run_id }}\`
            **Run ID:** ${{ github.run_id }}

            ---
            ü§ñ Generated with [Claude Code](https://claude.ai/code)`;

            // Check if similar issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,automated-fix,codeql'
            });

            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'automated-fix', 'codeql']
              });
            } else {
              console.log('Similar security issue already exists, skipping creation');
            }

      - name: Push Security Fix Branch
        if: steps.changes.outputs.has_changes == 'true' && github.event.inputs.dry_run != 'true'
        run: |
          git push origin HEAD:security-fixes-${{ github.run_id }}
            Please review the changes carefully before merging:
            1. Check that the fixes don't break functionality
            2. Run tests to ensure everything still works
            3. Review the detailed report artifact for specifics

            **Reports:**
            - Detailed fix report is available in the workflow artifacts
            - Look for `security-autofix-report.json` for complete details

            ---

            ü§ñ This PR was created automatically by the security auto-fix workflow.

            If you have concerns about any of the changes, please:
            1. Review the individual commits
            2. Check the detailed report
            3. Test the changes thoroughly
            4. Revert specific changes if needed

            The script only applies conservative fixes that are highly likely to be safe and correct.
          labels: |
            security
            automated
            codeql
          reviewers: ${{ github.repository_owner }}
          draft: false

      - name: Comment on Dry Run
        if: github.event.inputs.dry_run == 'true' && steps.changes.outputs.has_changes == 'true'
        env:
          FILES_CHANGED: ${{ steps.changes.outputs.files_changed }}
          MODE: ${{ github.event.inputs.mode || 'conservative' }}
        run: |
          echo "## üîç Dry Run Results"
          echo ""
          echo "The security auto-fix script found potential fixes:"
          echo "- Files that would be changed: ${FILES_CHANGED}"
          echo "- Mode: ${MODE}"
          echo ""
          echo "To apply these fixes, re-run this workflow with 'Dry run' set to false."
          echo ""
          echo "Review the uploaded report artifact for detailed information."

      - name: Summary
        if: always()
        env:
          MODE: ${{ github.event.inputs.mode || 'conservative' }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
          HAS_CHANGES: ${{ steps.changes.outputs.has_changes }}
          FILES_CHANGED: ${{ steps.changes.outputs.files_changed }}
        run: |
          echo "## Security Auto-Fix Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${MODE}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry Run**: ${DRY_RUN}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Found**: ${HAS_CHANGES}" >> $GITHUB_STEP_SUMMARY
          if [[ "${HAS_CHANGES}" == "true" ]]; then
            echo "- **Files Changed**: ${FILES_CHANGED}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the uploaded artifacts for detailed reports." >> $GITHUB_STEP_SUMMARY

  # Run tests after applying fixes to ensure nothing breaks
  test-fixes:
    runs-on: ubuntu-latest
    needs: security-autofix
    if: needs.security-autofix.outputs.has_changes == 'true' && github.event.inputs.dry_run != 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: security-fixes-${{ github.run_id }}

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install
          npm --prefix site install
          npm --prefix studio install

      - name: Run tests (if available)
        run: |
          # Run any available test suites
          if npm run test --if-present; then
            echo "‚úÖ Tests passed after security fixes"
          else
            echo "‚ùå Tests failed after security fixes"
            exit 1
          fi

      - name: Build project
        run: |
          # Attempt to build the project to ensure fixes don't break compilation
          if npm run build --if-present; then
            echo "‚úÖ Build succeeded after security fixes"
          else
            echo "‚ùå Build failed after security fixes"
            exit 1
          fi

      - name: Lint code
        run: |
          # Run linting if available
          if npm run lint --if-present; then
            echo "‚úÖ Linting passed after security fixes"
          else
            echo "‚ö†Ô∏è Linting failed after security fixes (may be acceptable)"
          fi
