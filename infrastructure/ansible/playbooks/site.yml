---
- name: Configure PostgreSQL Database Server
  hosts: database
  become: yes
  vars:
    postgresql_version: "16"
    postgresql_data_directory: "/var/lib/postgresql/16/main"
    postgresql_listen_addresses: "'*'"
    postgresql_max_connections: 200
    postgresql_shared_buffers: "2GB"
    postgresql_effective_cache_size: "6GB"
    postgresql_work_mem: "16MB"
    postgresql_maintenance_work_mem: "512MB"
    postgresql_checkpoint_completion_target: 0.9
    postgresql_wal_buffers: "16MB"
    postgresql_default_statistics_target: 100
    postgresql_random_page_cost: 1.1
    postgresql_effective_io_concurrency: 200

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install PostgreSQL and dependencies
      apt:
        name:
          - postgresql-{{ postgresql_version }}
          - postgresql-client-{{ postgresql_version }}
          - postgresql-contrib-{{ postgresql_version }}
          - python3-psycopg2
          - acl
        state: present

    - name: Configure PostgreSQL
      template:
        src: postgresql.conf.j2
        dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        backup: yes
      notify: restart postgresql

    - name: Configure PostgreSQL authentication
      template:
        src: pg_hba.conf.j2
        dest: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        backup: yes
      notify: restart postgresql

    - name: Start and enable PostgreSQL
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Create zitadel database
      postgresql_db:
        name: zitadel
        state: present
      become_user: postgres

    - name: Create zitadel user
      postgresql_user:
        name: postgres
        password: postgres
        db: zitadel
        priv: ALL
        state: present
      become_user: postgres

  handlers:
    - name: restart postgresql
      systemd:
        name: postgresql
        state: restarted

- name: Configure Zitadel Application Server
  hosts: application
  become: yes
  vars:
    docker_compose_version: "2.24.0"
    zitadel_version: "v2.65.1"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Create zitadel directory
      file:
        path: /opt/zitadel
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Deploy docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: /opt/zitadel/docker-compose.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Deploy Zitadel configuration
      template:
        src: "{{ item }}.j2"
        dest: /opt/zitadel/{{ item }}
        owner: ubuntu
        group: ubuntu
        mode: '0644'
      loop:
        - zitadel.yaml
        - defaults.yaml
        - Caddyfile

    - name: Start Zitadel services
      docker_compose:
        project_src: /opt/zitadel
        state: present
      become_user: ubuntu